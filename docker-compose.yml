# MRA-V1 Robotic Arm Docker Compose Configuration
# 
# Quick Launch Commands:
# docker compose run dev                    # Development shell (CPU)
# docker compose run sim                    # Gazebo simulation only
# docker compose run moveit-sim             # MoveIt + Gazebo simulation
# docker compose run hardware               # Hardware control only  
# docker compose run moveit-hardware        # MoveIt + hardware control
# docker compose run gpu-dev                # Development shell (GPU)
# 
# With custom launch modes:
# docker compose run -e LAUNCH_MODE=gazebo sim
# docker compose run -e LAUNCH_MODE=moveit-gazebo moveit-sim

services:
  # Base development environment (CPU)
  dev:
    build: .
    privileged: true
    network_mode: host
    command: /bin/bash
    volumes:
      - .:/workspace
      - ros2-data:/root
      - /tmp/.X11-unix:/tmp/.X11-unix
      - $XAUTHORITY:/root/.Xauthority
      - /dev:/dev  # For hardware access
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: $DISPLAY
      ROS_WORKSPACE: /workspace
    working_dir: /workspace

  # Gazebo simulation only
  sim:
    extends: dev
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: $DISPLAY
      ROS_WORKSPACE: /workspace
      LAUNCH_MODE: ${LAUNCH_MODE:-gazebo}
    command: >
      bash -c "
        source /opt/ros/kilted/setup.bash &&
        echo 'Building ROS2 packages...' &&
        cd /workspace &&
        colcon build --packages-select arm_6dof arm_desc arm_moveit_config &&
        source install/setup.bash &&
        case \"$$LAUNCH_MODE\" in
          gazebo)
            echo 'Launching Gazebo simulation with robot arm...' &&
            ros2 launch arm_desc gazebo.launch.py
            ;;
          *)
            echo 'Starting Gazebo simulation...' &&
            gz sim /workspace/worlds/arm_workspace.world
            ;;
        esac
      "

  # MoveIt + Gazebo simulation
  moveit-sim:
    extends: dev
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: $DISPLAY
      ROS_WORKSPACE: /workspace
      LAUNCH_MODE: ${LAUNCH_MODE:-moveit-gazebo}
    command: >
      bash -c "
        source /opt/ros/kilted/setup.bash &&
        echo 'Building ROS2 packages...' &&
        cd /workspace &&
        colcon build --packages-select arm_6dof arm_desc arm_moveit_config &&
        source install/setup.bash &&
        echo 'Launching MoveIt with Gazebo simulation...' &&
        ros2 launch arm_moveit_config demo.launch.py
      "

  # Hardware control only
  hardware:
    extends: dev
    privileged: true
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: $DISPLAY
      ROS_WORKSPACE: /workspace
    command: >
      bash -c "
        source /opt/ros/kilted/setup.bash &&
        echo 'Building ROS2 packages...' &&
        cd /workspace &&
        colcon build --packages-select arm_6dof arm_desc arm_moveit_config &&
        source install/setup.bash &&
        echo 'Starting hardware interface...' &&
        echo 'Note: Hardware launch file needs to be created' &&
        ros2 run arm_6dof arm_6dof_node
      "

  # MoveIt + Hardware control
  moveit-hardware:
    extends: dev
    privileged: true
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: $DISPLAY
      ROS_WORKSPACE: /workspace
    command: >
      bash -c "
        source /opt/ros/kilted/setup.bash &&
        echo 'Building ROS2 packages...' &&
        cd /workspace &&
        colcon build --packages-select arm_6dof arm_desc arm_moveit_config &&
        source install/setup.bash &&
        echo 'Launching MoveIt with hardware control...' &&
        ros2 launch arm_moveit_config demo_real.launch.py
      "

  # GPU-enabled development environment
  gpu-dev:
    extends: dev
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      QT_X11_NO_MITSHM: 1
      DISPLAY: $DISPLAY
      ROS_WORKSPACE: /workspace
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
volumes:
  ros2-data:
